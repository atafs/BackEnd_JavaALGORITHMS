package parser.jdom2;

import java.util.List;

import org.jdom2.Document;
import org.jdom2.Element;
import org.jdom2.output.Format;
import org.jdom2.output.XMLOutputter;

public class GenerateXMLDriver {
	
//	//ATTRIBUTES
//	private static String[][] tutorials = {
//		{"Abstract Factory", "Factory Method"},
//		{"Point to Point", "Publish / Subscribe"}
//	};
	
//	//MAIN
//	public static void main(String[] args) {
//		System.out.println(GenerateXMLDriver.generateChannelXML());
//	}
	
	/** STATIC FUNCTION: */
	public static String generateChannelXML(List<String> times, List<String> uid) {
		//DOCUMENT
		Document document = new Document();
		
		//ELEMENTS
		Element channelElement = new Element("report");
		document.setRootElement(channelElement);
		
		//GENERATE
		generateChannelXML(channelElement, "Object Oriented Design Pattern", uid);
		generateChannelXML(channelElement, "Java Message Service", times);

		//RETURN
		return (new XMLOutputter(Format.getPrettyFormat())).outputString(document);
	}
	
	/** STATIC PROCEDURE: */
	public static void generateChannelXML(Element channelElement, String topicName, List<String> topicTutorials, String tag) {
		Element topicElement = new Element("rendering");
		channelElement.addContent(topicElement);
			
		Element nameElement = new Element("document");
		nameElement.addContent(topicName);
		topicElement.addContent(nameElement);
		
		//LOOP
		int i = 0;
		while (i < topicTutorials.size()) {
			nameElement = new Element("tutorial");
			nameElement.addContent(topicTutorials.get(i++));
			topicElement.addContent(nameElement);
		}
	}

}
